<launch>
    <arg name="END_EFFECTOR" default="gripper"/>
    
    <!-- Allegro Hand config -->
    <arg name="HAND" default="right"/>
    <arg name="HAND_AUTO_CAN" default="true"/>
    <arg name="HAND_CAN_DEVICE" default="/dev/pcanusb1"/>
    <arg name="HAND_PARAMS_DIR" default="$(find allegro_hand_parameters)"/>
    <arg name="HAND_ZEROS" default="$(arg HAND_PARAMS_DIR)/zero.yaml"/>
    <arg name="HAND_CAN_POLLING" default="true"/>
    <arg name="HAND_PD" default="false"/>

    <!-- xArm config -->
    <arg name="ARM_IP" default="192.168.1.209"/>
    <arg name="ARM_REPORT_TYPE" default="normal"/>

    <!-- human detection config -->
    <arg name="HUMAN_CAM_ID"/>
    <arg name="HUMAN_CONF_THRESHOLD" default="0.71"/>
    <arg name="HUMAN_AREA_THRESHOLD" default="0.125"/>
    <arg name="HUMAN_ENTER_MIN" default="1.0"/>
    <arg name="HUMAN_EXIT_MAX" default="0.5"/>
    <arg name="HUMAN_BOUNDS" default="0.0,0.0,1.0,1.0"/>

    <!-- object detection config -->
    <arg name="OBJECT_CAM_ID"/>
    <arg name="OBJECT_ENTER_MIN" default="0.25"/>
    <arg name="OBJECT_EXIT_MAX" default="0.25"/>

    <arg name="SHOW_CAM" default="true"/>
    <arg name="RUN_DEMO" default="true"/> <!-- disable to not run auto.py -->

    <arg name="HAND_YANK" default="false"/>

    <include file="$(find arm_controller)/launch/arm_bringup.launch">
        <arg name="HAND" value="$(arg HAND)"/>
        <arg name="HAND_AUTO_CAN" value="$(arg HAND_AUTO_CAN)"/>
        <arg name="HAND_CAN_DEVICE" value="$(arg HAND_CAN_DEVICE)"/>
        <arg name="HAND_PARAMS_DIR" value="$(arg HAND_PARAMS_DIR)"/>
        <arg name="HAND_ZEROS" value="$(arg HAND_ZEROS)"/>
        <arg name="HAND_CAN_POLLING" value="$(arg HAND_CAN_POLLING)"/>
        <arg name="HAND_PD" value="$(arg HAND_PD)"/>
        <arg name="ARM_IP" value="$(arg ARM_IP)"/>
        <arg name="ARM_REPORT_TYPE" value="$(arg ARM_REPORT_TYPE)"/>
        <arg name="HAND_CTL" value="false" unless="$(eval arg('END_EFFECTOR') == 'hand')"/>
        <arg name="GRIP_CTL" value="true" if="$(eval arg('END_EFFECTOR') == 'gripper')"/>
    </include>

    <node name="handover_demo"
        pkg="handover_demo"
        type="auto.py"
        output="screen"
        required="true"
        if="$(arg RUN_DEMO)">
        <param name="END_EFFECTOR" value="$(arg END_EFFECTOR)"/>
    </node>
    
    <include file="$(find yolo_detector)/launch/yolo.launch">
        <arg name="NAME" value="human_detector"/>
        <arg name="CAM_ID" value="$(arg HUMAN_CAM_ID)"/>
        <arg name="CLASSIFIERS" value="person"/>
        <arg name="CONF_THRESHOLD" value="$(arg HUMAN_CONF_THRESHOLD)"/>
        <arg name="AREA_THRESHOLD" value="$(arg HUMAN_AREA_THRESHOLD)"/>
        <arg name="ENTER_MIN" value="$(arg HUMAN_ENTER_MIN)"/>
        <arg name="EXIT_MAX" value="$(arg HUMAN_EXIT_MAX)"/>
        <arg name="SHOW_CAM" value="$(arg SHOW_CAM)"/>
        <arg name="BOUNDARY" value="$(arg HUMAN_BOUNDS)"/>
    </include>

    <include file="$(find apriltag_detector)/launch/atag.launch">
        <arg name="NAME" value="object_detector"/>
        <arg name="CAM_ID" value="$(arg OBJECT_CAM_ID)"/>
        <arg name="ENTER_MIN" value="$(arg OBJECT_ENTER_MIN)"/>
        <arg name="EXIT_MAX" value="$(arg OBJECT_EXIT_MAX)"/>
        <arg name="SHOW_CAM" value="$(arg SHOW_CAM)"/>
    </include>

    <node name="detector_merge"
        pkg="handover_demo"
        type="detector_merge.py"
        output="screen"
        required="true"/>
    
    <node name="actuator"
        pkg="handover_demo"
        type="actuator.py"
        output="screen"
        required="true">
        <param name="END_EFFECTOR" value="$(arg END_EFFECTOR)"/>
    </node>

    <node name="yank_detector"
        pkg="hand_yank_detector"
        type="main.py"
        output="screen"
        required="true"
        if="$(arg HAND_YANK)"/>
</launch>